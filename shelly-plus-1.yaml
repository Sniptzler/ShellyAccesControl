substitutions:
  device_name: "Shelly Plus 1"
  # Higher value gives lower watt readout
  current_res: "0.001"
  # Lower value gives lower voltage readout
  voltage_div: "1925"

esphome:
  name: "shelly-plus-1"
  friendly_name: shelly plus 1
  platformio_options:
    board_build.f_cpu: 160000000L

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_FREERTOS_UNICORE: y
      CONFIG_ESP32_DEFAULT_CPU_FREQ_160: y
      CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ: "160"

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret key

ota:
  - platform: esphome
    password: !secret password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Shelly-Plus-1"
    password: !secret ap_password

captive_portal:


# logik to controll acces via homeassistant
script:
  - id: open_door
    then:
      - switch.turn_on: relay
      - delay: 4s
      - switch.turn_off: relay

button:
  - platform: template
    name: "${device_name} Open"
    on_press:
      - script.execute:
          id: open_door
    
# core shelly configuration
output:
  - platform: gpio
    id: "relay_output"
    pin: GPIO26

switch:
  - platform: output
    id: "relay"
    name: "${device_name} Relay"
    output: "relay_output"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      then:
        - delay: 6s
        - switch.turn_off: relay

binary_sensor:
  - platform: gpio
    name: "${device_name} Switch"
    pin: GPIO4
    #on_press:
    #  then:
    #    - switch.toggle: "relay"
    filters:
      - delayed_on_off: 50ms
  - platform: gpio
    name: "${device_name} Button"
    pin:
      number: GPIO25
      inverted: yes
      mode:
        input: true
        pullup: true
    #on_press:
    #  then:
    #    - switch.toggle: "relay"
    filters:
      - delayed_on_off: 5ms

sensor:
  - platform: ntc
    sensor: temp_resistance_reading
    name: "${device_name} Temperature"
    unit_of_measurement: "Â°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: "80.0"
        then:
          - switch.turn_off: "relay"
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 10kOhm
  - platform: adc
    id: temp_analog_reading
    pin: GPIO32
    attenuation: 12db

  - platform: adc
    name: "${device_name} Relay Supply Voltage"
    pin: GPIO33
    attenuation: 12db
    filters:
      - multiply: 8

status_led:
  pin:
    number: GPIO0
    inverted: true



# wiegand configuration for shelly
wiegand:
  - id: mykeypad
    d0: # input1
      number: GPIO01
      inverted: false
      mode:
        input: true
        pullup: false
    d1: # input2
      number: GPIO03
      inverted: false
      mode:
        input: true
        pullup: false
    on_key:
      - lambda: ESP_LOGI("KEY", "received key %d", x);
    on_tag:
      - lambda: ESP_LOGI("TAG", "received tag %s", x.c_str());
    on_raw:
      - lambda: ESP_LOGI("RAW", "received raw %d bits, value %llx", bits, value);

#key collector collects entered keys
key_collector:
  - id: pincode_reader
    source_id: mykeypad
    min_length: 4
    max_length: 10
    end_keys: "#"
    end_key_required: true
    #back_keys: "*"
    #clear_keys: "C"
    allowed_keys: "0123456789"
    timeout: 4s
    on_result:
      then:
        - homeassistant.event:
            event: esphome.key_entered
            data:
              key: !lambda return x.c_str();
        - if:
            condition:
              - lambda: 'return strcmp(x.c_str(), !secret pin) == 0;'
            then:
              - script.execute: open_door
                  
        - lambda: ESP_LOGI("Key collected", "received tag %s", x.c_str());
